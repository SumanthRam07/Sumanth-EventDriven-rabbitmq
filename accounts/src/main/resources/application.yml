server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
      url: jdbc:h2:mem:testdb
      driverClassName: org.h2.Driver
      username: sa
      password: ''
  h2:
    console:
        enabled: true
  jpa:
      database-platform: org.hibernate.dialect.H2Dialect
      hibernate:
        ddl-auto: update
      show-sql: true
  config:
        import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
              enabled: true
    function:
      defination: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: sent-communication
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s







#    url: "jdbc:mysql://localhost:3307/accountsdb"
#    username: root
#    password: root
#  jpa:
#    show-sql: true
#  sql:
#      init:
#        mode: always
#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"



#  datasource:
#    url: jdbc:h2:mem:testdb
#    driverClassName: org.h2.Driver
#    username: sa
#    password: ''
#  h2:
#    console:
#      enabled: true
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    hibernate:
#      ddl-auto: update
#    show-sql: true




endpoints:
  shutdown:
    enabled: true


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
     tags:
       application: ${spring.application.name}





build:
  version: 2.0


eureka:
  instance:
    preferIpAddress: true
  client:
     fetchRegistry: true
     registerWithEureka: true
     serviceUrl:
          defaultZone: http://localhost:8070/eureka/


info:
  app:
    name: "accounts"
    description: "Sumanth Bank Accounts Application"
    version: "3.0.0"


logging:
  level:
    com:
      eazybytes:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"




resilience4J.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000



resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 1000
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
          - java.lang.NullPointerException
      retryExceptions:
           - java.util.concurrent.TimeoutException

#    // the exceptions full name has to be deinfed
#    // when ever we are defining the retry exceptions , we dont need to define the ignore Exceptions, as it only allows the
#       rety exceptiosn adn igores the rest by default.



resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1

  #  h2:
  #    console:
  #      enabled: true


  #    database-platform: org.hibernate.dialect.H2Dialect
  #    hibernate:
  #      ddl-auto: update